{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","Default","sortField","setSortField","reverseField","setReverseField","visibleGoods","preparedGoods","Alphabet","sort","good1","good2","localeCompare","Length","length","getPreparedGoods","reverse","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBYA,E,mEAbCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUD,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KAyBL,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACMC,EAtBR,SAA0BJ,GACxB,IAAMK,EAAa,UAAOT,GAE1B,OAAQI,GACN,KAAKL,EAASW,SACZ,OAAOD,EAAcE,MACnB,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAG1C,KAAKd,EAASgB,OACZ,OAAON,EAAcE,MACnB,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAG3C,QACE,OAAOP,GAOoBQ,CAAiBb,GAMhD,OAJIE,GACFE,EAAaU,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAaN,EAASW,WACrCW,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYlB,IAAcL,EAASW,WAJvC,iCAUA,wBACEU,QAAS,kBAAMf,EAAaN,EAASgB,SACrCM,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYlB,IAAcL,EAASgB,SAJvC,4BAUA,wBACEK,QAAS,kBAAMb,GAAiBD,IAChCe,KAAK,SACLF,UAAWG,IAAG,qBAAsB,CAClC,YAAahB,IAJjB,sBAWGF,GAAaE,IACZ,wBACEc,QAAS,WACPf,EAAaN,EAASI,SACtBI,GAAgB,IAElBc,KAAK,SACLF,UAAU,4BANZ,sBAcN,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCpGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.11bb24d8.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Default = '',\n}\n\nfunction getPreparedGoods(sortField: SortType): string[] {\n  const preparedGoods = [...goodsFromServer];\n\n  switch (sortField) {\n    case SortType.Alphabet:\n      return preparedGoods.sort(\n        (good1, good2) => good1.localeCompare(good2),\n      );\n\n    case SortType.Length:\n      return preparedGoods.sort(\n        (good1, good2) => good1.length - good2.length,\n      );\n\n    default:\n      return preparedGoods;\n  }\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.Default);\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods: string[] = getPreparedGoods(sortField);\n\n  if (reverseField) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.Alphabet)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.Alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.Length)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.Length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverseField(!reverseField)}\n          type=\"button\"\n          className={cn('button is-warning ', {\n            'is-light': !reverseField,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(\n          (sortField || reverseField) && (\n            <button\n              onClick={() => {\n                setSortField(SortType.Default);\n                setReverseField(false);\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}